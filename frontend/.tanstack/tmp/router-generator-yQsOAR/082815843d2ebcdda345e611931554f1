/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as Workout_detailsRouteImport } from './routes/workout_details'
import { Route as VerificationRouteImport } from './routes/verification'
import { Route as UserageRouteImport } from './routes/userage'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as PlansRouteImport } from './routes/plans'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AdminloginRouteImport } from './routes/adminlogin'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminSignup12345RouteImport } from './routes/admin.signup12345'

const ContactLazyRouteImport = createFileRoute('/contact')()

const ContactLazyRoute = ContactLazyRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))
const Workout_detailsRoute = Workout_detailsRouteImport.update({
  id: '/workout_details',
  path: '/workout_details',
  getParentRoute: () => rootRouteImport,
} as any)
const VerificationRoute = VerificationRouteImport.update({
  id: '/verification',
  path: '/verification',
  getParentRoute: () => rootRouteImport,
} as any)
const UserageRoute = UserageRouteImport.update({
  id: '/userage',
  path: '/userage',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansRoute = PlansRouteImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminloginRoute = AdminloginRouteImport.update({
  id: '/adminlogin',
  path: '/adminlogin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSignup12345Route = AdminSignup12345RouteImport.update({
  id: '/admin/signup12345',
  path: '/admin/signup12345',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/adminlogin': typeof AdminloginRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/plans': typeof PlansRoute
  '/pricing': typeof PricingRoute
  '/signup': typeof SignupRoute
  '/userage': typeof UserageRoute
  '/verification': typeof VerificationRoute
  '/workout_details': typeof Workout_detailsRoute
  '/contact': typeof ContactLazyRoute
  '/admin/signup12345': typeof AdminSignup12345Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/adminlogin': typeof AdminloginRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/plans': typeof PlansRoute
  '/pricing': typeof PricingRoute
  '/signup': typeof SignupRoute
  '/userage': typeof UserageRoute
  '/verification': typeof VerificationRoute
  '/workout_details': typeof Workout_detailsRoute
  '/contact': typeof ContactLazyRoute
  '/admin/signup12345': typeof AdminSignup12345Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/adminlogin': typeof AdminloginRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/plans': typeof PlansRoute
  '/pricing': typeof PricingRoute
  '/signup': typeof SignupRoute
  '/userage': typeof UserageRoute
  '/verification': typeof VerificationRoute
  '/workout_details': typeof Workout_detailsRoute
  '/contact': typeof ContactLazyRoute
  '/admin/signup12345': typeof AdminSignup12345Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/adminlogin'
    | '/login'
    | '/logout'
    | '/plans'
    | '/pricing'
    | '/signup'
    | '/userage'
    | '/verification'
    | '/workout_details'
    | '/contact'
    | '/admin/signup12345'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/adminlogin'
    | '/login'
    | '/logout'
    | '/plans'
    | '/pricing'
    | '/signup'
    | '/userage'
    | '/verification'
    | '/workout_details'
    | '/contact'
    | '/admin/signup12345'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/adminlogin'
    | '/login'
    | '/logout'
    | '/plans'
    | '/pricing'
    | '/signup'
    | '/userage'
    | '/verification'
    | '/workout_details'
    | '/contact'
    | '/admin/signup12345'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AdminloginRoute: typeof AdminloginRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  PlansRoute: typeof PlansRoute
  PricingRoute: typeof PricingRoute
  SignupRoute: typeof SignupRoute
  UserageRoute: typeof UserageRoute
  VerificationRoute: typeof VerificationRoute
  Workout_detailsRoute: typeof Workout_detailsRoute
  ContactLazyRoute: typeof ContactLazyRoute
  AdminSignup12345Route: typeof AdminSignup12345Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workout_details': {
      id: '/workout_details'
      path: '/workout_details'
      fullPath: '/workout_details'
      preLoaderRoute: typeof Workout_detailsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/verification': {
      id: '/verification'
      path: '/verification'
      fullPath: '/verification'
      preLoaderRoute: typeof VerificationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/userage': {
      id: '/userage'
      path: '/userage'
      fullPath: '/userage'
      preLoaderRoute: typeof UserageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans': {
      id: '/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof PlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/adminlogin': {
      id: '/adminlogin'
      path: '/adminlogin'
      fullPath: '/adminlogin'
      preLoaderRoute: typeof AdminloginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/signup12345': {
      id: '/admin/signup12345'
      path: '/admin/signup12345'
      fullPath: '/admin/signup12345'
      preLoaderRoute: typeof AdminSignup12345RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AdminloginRoute: AdminloginRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  PlansRoute: PlansRoute,
  PricingRoute: PricingRoute,
  SignupRoute: SignupRoute,
  UserageRoute: UserageRoute,
  VerificationRoute: VerificationRoute,
  Workout_detailsRoute: Workout_detailsRoute,
  ContactLazyRoute: ContactLazyRoute,
  AdminSignup12345Route: AdminSignup12345Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
